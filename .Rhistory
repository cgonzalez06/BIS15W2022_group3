mutate(pop_categories = case_when(mean_pop<=909500 ~ "small pop", mean_pop>909500 & mean_pop<=11650000 ~ "medium pop", mean_pop>11650000 ~ "large pop"))%>%
mutate(income_categories = case_when(mean_income<=1630 ~ "low income", mean_income>1630  & mean_income<=9620 ~ "average income", mean_income>9620 ~ "high income"))
gapminder_join_categories
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
ggplot(aes(x=life_exp_categories, y="n")) +geom_col()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
filter(pop_categories="large")%>%
ggplot(aes(x=life_exp_categories, fill=pop_categories)) +geom_col()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
filter(pop_categories=="large")%>%
ggplot(aes(x=life_exp_categories, fill=pop_categories)) +geom_col()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
filter(pop_categories=="large")%>%
ggplot(aes(x=life_exp_categories, y="n", fill=pop_categories)) +geom_col()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
filter(pop_categories=="large")%>%
ggplot(aes(x=life_exp_categories, y="n")) +geom_col()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
filter(pop_categories=="large")%>%
ggplot(aes(x=life_exp_categories, y="n")) +geom_col()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
ggplot(aes(x=life_exp_categories, y="n")) +geom_col()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
ggplot(aes(x=life_exp_categories, y="n", , fill=pop_categories)) +geom_col()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
ggplot(aes(x=pop_categories, y="n", , fill=life_exp_categories)) +geom_col() + labs(title= "Population size vs Life Expectancy Range", y="n", x= "Population")
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
ggplot(aes(x=pop_categories, y="n", , fill=life_exp_categories)) +geom_col() + labs(title= "Population size vs Life Expectancy Range", y="n", x= "Population") + theme_clean()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
ggplot(aes(x=pop_categories, y="n", , fill=life_exp_categories)) +geom_col() + labs(title= "Population size vs Life Expectancy Range", y="n", x= "Population") + theme_dark()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
ggplot(aes(x=pop_categories, y="n", , fill=life_exp_categories)) +geom_col() + labs(title= "Population size vs Life Expectancy Range", y="n", x= "Population") + theme_clean()
life_expectancy%>%
select(country, "x1920":"x2020")%>%
group_by(country)%>%
mutate(slope=(x2020-x1920))%>%
select(country, slope)%>%
arrange(desc(slope))%>%
head(5)
life_p%>%
ggplot(aes(x=as.numeric(years), y=life_exp)) + geom_point(color="lightblue") + theme_clean() + theme(axis.text.x= element_text(angle=60)) + labs(title="Life Expectancy for Kuwait from 1920 to 2020")
life_p%>%
ggplot(aes(x=years, y=life_exp)) + geom_point(color="lightblue") + theme_clean() + theme(axis.text.x= element_text(angle=60)) + labs(title="Life Expectancy for Kuwait from 1920 to 2020")
readr::read_csv("data/life_expectancy_years.csv")
readr::read_csv("data/life_expectancy_years.csv")%>% #not using clean_names()
select(country, "1920":"2020")
life_p_K <- readr::read_csv("data/life_expectancy_years.csv")%>% #not using clean_names()
select(country, "1920":"2020")%>%
filter(country=="Kuwait")%>%
pivot_longer(-country, names_to = "years", values_to = "life_exp")
life_p_K
life_p%>%
ggplot(aes(x=years, y=life_exp)) + geom_point(color="lightblue") + theme_clean() + theme(axis.text.x= element_text(angle=60)) + labs(title="Life Expectancy for Kuwait from 1920 to 2020")
life_p%>%
ggplot(aes(x=as.numeric(years), y=life_exp)) + geom_point(color="lightblue") + theme_clean() + theme(axis.text.x= element_text(angle=60)) + labs(title="Life Expectancy for Kuwait from 1920 to 2020")
life_p_K$years <- as.numeric(life_p_K$years)
life_p%>%
ggplot(aes(x=years, y=life_exp)) + geom_point(color="lightblue") + theme_clean() + theme(axis.text.x= element_text(angle=60)) + labs(title="Life Expectancy for Kuwait from 1920 to 2020")
life_p%>%
ggplot(aes(x=years, y=life_exp)) + geom_point(color="lightblue") + theme_clean() + theme(axis.text.x= element_text(angle=60)) + labs(title="Life Expectancy for Kuwait from 1920 to 2020")
life_p%>%
ggplot(aes(x=years, y=life_exp)) + geom_point(color="lightblue") + theme_clean() + theme(axis.text.x= element_text(angle=60)) + labs(title="Life Expectancy for Kuwait from 1920 to 2020", x="Year", y="Life Expectancy")
life_p_K%>%
ggplot(aes(x=years, y=life_exp)) + geom_point(color="lightblue") + theme_clean() + theme(axis.text.x= element_text(angle=60)) + labs(title="Life Expectancy for Kuwait from 1920 to 2020", x="Year", y="Life Expectancy")
life_p
top_n_pop <- population_total%>%
select(country, "x1920":"x2020")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")%>%
select(country, slope)
population_total%>%
select(country, "x1920":"x2020")%>%
mutate(slope=(x2020-x1920))%>%
arrange(desc(slope))%>%
select(country, slope)
head(5)
population_total%>%
select(country, "x1920":"x2020")%>%
mutate(slope=(x2020-x1920))%>%
arrange(desc(slope))%>%
select(country, slope)%>%
head(5)
top_n_pop <- population_total%>%
select(country, "x1920":"x2020")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")
top_n_pop
top_n_pop <- population_total%>%
select(country, "x1920":"x2020")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")%>%
pivot_longer(-country, names_to = "years", values_to = "population")
top_n_pop
top_n_pop%>%
ggplot(aes(x=years, y=log10(population), color=country)) + geom_point() + labs(title="Top 5 Countries with Highest Population Growth", y="Population (log10)", x="Year")
top_pop_notclean <-readr::read_csv("data/population_total.csv")
top_n_pop <- <-readr::read_csv("data/population_total.csv") %>%
top_n_pop <-readr::read_csv("data/population_total.csv") %>%
select(country, "x1920":"x2020")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")%>%
pivot_longer(-country, names_to = "years", values_to = "population")
top_n_pop <-readr::read_csv("data/population_total.csv") %>%
select(country, "1920":"2020")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")%>%
pivot_longer(-country, names_to = "years", values_to = "population")
top_n_pop
top_n_pop <-population_total%>%
select(country, "1920":"2020")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")%>%
pivot_longer(-country, names_to = "years", values_to = "population")
top_n_pop <-population_total%>%
select(country, "x1920":"x2020")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")%>%
pivot_longer(-country, names_to = "years", values_to = "population")
top_n_pop
top_pop_notclean <- readr::read_csv("data/population_total.csv") %>%
ggplot(aes(x=as.numeric(years), y=log10(population), color=country)) + geom_point() + labs(title="Top 5 Countries with Highest Population Growth", y="Population (log10)", x="Year")
top_pop_notclean <- readr::read_csv("data/population_total.csv") %>%
ggplot(aes(x=as.numeric(years), y=log10(population), color=country)) + geom_point() + labs(title="Top 5 Countries with Highest Population Growth", y="Population (log10)", x="Year")
top_pop_notclean <- readr::read_csv("data/population_total.csv") %>%
ggplot(aes(x=as.numeric(years), y=log10(population), color=country)) + geom_point() + labs(title="Top 5 Countries with Highest Population Growth", y="Population (log10)", x="Year")
top_pop_notclean
top_pop_notclean <- readr::read_csv("data/population_total.csv")
top_pop_notclean <- readr::read_csv("data/population_total.csv") %>%
pivot_longer(-country, names_to = "years", values_to = "population")
top_pop_notclean
top_pop_notclean$years <- as.numeric(top_pop_notclean$years)
top_pop_notclean%>%
ggplot(aes(x=as.numeric(years), y=log10(population), color=country)) + geom_point() + labs(title="Top 5 Countries with Highest Population Growth", y="Population (log10)", x="Year")
top_pop_notclean%>%
ggplot(aes(x=years, y=log10(population), color=country)) + geom_point() + labs(title="Top 5 Countries with Highest Population Growth", y="Population (log10)", x="Year")
top_pop_notclean <- readr::read_csv("data/population_total.csv") %>%
select(country, "x1920":"x2020")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")%>%
pivot_longer(-country, names_to = "years", values_to = "population")
top_pop_notclean <- readr::read_csv("data/population_total.csv") %>%
select(country, "1920":"2020")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")%>%
pivot_longer(-country, names_to = "years", values_to = "population")
top_pop_notclean
top_pop_notclean$years <- as.numeric(top_pop_notclean$years)
top_pop_notclean%>%
ggplot(aes(x=years, y=log10(population), color=country)) + geom_point() + labs(title="Top 5 Countries with Highest Population Growth", y="Population (log10)", x="Year")
gdp_notclean <- readr::read_csv("data/income_per_person_gdppercapita_ppp_inflation_adjusted.csv")%>%
select(country, "x1920":"x2020")%>%
group_by(country)%>%
pivot_longer(-country, names_to = "years", values_to = "gdp")%>%
filter(country=="Qatar" | country=="Luxembourg" | country=="Singapore" | country=="Brunei"| country=="Ireland")
gdp_notclean <- readr::read_csv("data/income_per_person_gdppercapita_ppp_inflation_adjusted.csv")%>%
select(country, "1920":"2020")%>%
group_by(country)%>%
pivot_longer(-country, names_to = "years", values_to = "gdp")%>%
filter(country=="Qatar" | country=="Luxembourg" | country=="Singapore" | country=="Brunei"| country=="Ireland")
gdp_notclean
gdp_notclean$years <- as.numeric(gdp_notclean$years)
gdp_notclean%>%
ggplot(aes(x=years, y=log10(gdp), color=country))+ geom_point()
gdp_notclean%>%
ggplot(aes(x=years, y=log10(gdp), color=country))+ geom_point() +theme_clean() + labs(title= "Top 5 Countries with Largest Income Growth", x="Year", y="Income")
life_expectancy%>%
select(country, "x1920":"x2020")%>%
pivot_longer(-country, names_to = "years", values_to = "life_exp")%>%
group_by(country)%>%
summarise(ave_life_exp = mean(life_exp))%>%
arrange(ave_life_exp)%>%
head()
life_expectancy%>%
select(country, "x1920":"x2020")%>%
pivot_longer(-country, names_to = "years", values_to = "life_exp")%>%
group_by(country)%>%
summarise(ave_life_exp = mean(life_exp))%>%
arrange(ave_life_exp)
life_expectancy%>%
select(country, "x1920":"x2020")%>%
pivot_longer(-country, names_to = "years", values_to = "life_exp")%>%
group_by(country)%>%
summarise(ave_life_exp = mean(life_exp))%>%
arrange(ave_life_exp)%>%
head()
life_expectancy%>%
select(country, "x1920":"x2020")%>%
pivot_longer(-country, names_to = "years", values_to = "life_exp")%>%
group_by(country)%>%
summarise(ave_life_exp = mean(life_exp))%>%
arrange(ave_life_exp)%>%
head(1)
life_expectancy%>%
select(country, "x1920":"x2020")%>%
pivot_longer(-country, names_to = "years", values_to = "life_exp")%>%
group_by(country)%>%
summarise(ave_life_exp = mean(life_exp))%>%
arrange(desc(ave_life_exp))%>%
head(1)
life_p_K%>%
ggplot(aes(x=years, y=life_exp)) + geom_point(color="lightblue") + theme_clean() + labs(title="Life Expectancy for Kuwait from 1920 to 2020", x="Year", y="Life Expectancy")
top_pop_notclean  <- readr::read_csv("data/population_total.csv")%>%
select(country, "1920":"2020")%>%
pivot_longer(-country, names_to = "years", values_to = "population")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")
top_n_pop
top_pop_notclean  <- readr::read_csv("data/population_total.csv")%>%
select(country, "1920":"2020")%>%
pivot_longer(-country, names_to = "years", values_to = "population")%>%
filter(country=="India" | country=="China" | country=="Indonesia" | country=="United States"| country=="Pakistan")
top_pop_notclean
top_pop_notclean$years <- as.numeric(top_pop_notclean$years)
top_pop_notclean%>%
ggplot(aes(x=years, y=log10(population), color=country)) + geom_point() + labs(title="Top 5 Countries with Highest Population Growth", y="Population (log10)", x="Year")
gdp_notclean <- readr::read_csv("data/income_per_person_gdppercapita_ppp_inflation_adjusted.csv")%>%#not using clean_names() to help with making years a numeric
select(country, "1920":"2020")%>%
group_by(country)%>%
pivot_longer(-country, names_to = "years", values_to = "gdp")%>%
filter(country=="Qatar" | country=="Luxembourg" | country=="Singapore" | country=="Brunei"| country=="Ireland")
gdp_notclean
gdp_notclean$years <- as.numeric(gdp_notclean$years)
gdp_notclean%>%
ggplot(aes(x=years, y=log10(gdp), color=country))+ geom_point() +theme_clean() + labs(title= "Top 5 Countries with Largest Income Growth", x="Year", y="Income")
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
ggplot(aes(x=pop_categories, y="n", , fill=life_exp_categories)) +geom_col() + labs(title= "Population size vs Life Expectancy Range", y="n", x= "Population") + theme_clean()
gapminder_join_categories%>%
select(country, life_exp_categories, pop_categories, income_categories)%>%
ggplot(aes(x=pop_categories, y="n", , fill=life_exp_categories)) +geom_col() + labs(title= "Population size vs Life Expectancy Range", y="Number of Countries", x= "Population") + theme_clean()
library(tidyverse)
library(janitor)
library(ggthemes)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
animal_bites <- readr::read_csv("Health_AnimalBites.csv")%>%clean_names()
setwd("~/Documents/GitHub/GitHub/Project/BIS15W2022_group3")
animal_bites <- readr::read_csv("Health_AnimalBites.csv")%>%clean_names()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
animal_bites <- readr::read_csv("Health_AnimalBites.csv")%>%clean_names()
animal_bites <- readr::read_csv("Health_AnimalBites.csv")%>%clean_names()
animal_bites <- readr::read_csv("data/Health_AnimalBites.csv")%>%clean_names()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
animal_bites <- readr::read_csv("data/Health_AnimalBites.csv")%>%clean_names()
animal_bites
animal_bites <- animal_bites%>%
naniar::replace_with_na(replace=list(gender_id_desc="UNKNOWN", results_id_desc="UNKNOWN", disposition_id_desc="UNKNOWN"))
animal_bites
animal_bites%>%
count(breed_id_desc)%>%
arrange(desc(n))
animal_bites%>%
naniar::miss_var_summary()
animal_bites%>%
separate(bite_date, into=c("year", "month", "day"), sep = "-")
animal_bites%>%
count(results_id_desc)
animal_bites%>%
group_by(species_id_desc)
animal_bites%>%
count(species_id_desc)
animal_bites%>%
count(species_id_desc)%>%
arrange(n)
setwd("~/Documents/GitHub/GitHub/Project/BIS15W2022_group3/data")
setwd("~/Documents/GitHub/GitHub/Project")
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
setwd("~/Documents/GitHub/GitHub/BIS15W2022_jtoye")
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
spider_list
spider_list([5])
spider_list([5])
spider_list[[5]]
class(spider_list[[7]])
spider_list[[5]]
class(spider_list[[7]])
str(spider_list[[10]])
str(spider_list[[10]])
spider_list[[5]]
class(spider_list[[7]])
names <- list.files(path = "data/spiders", pattern = ".csv")
names_list <- strsplit(names, split = " .csv")
names_list
names <- list.files(path = "data/spiders", pattern = ".csv")
names <- list.files(path = "data/spiders", pattern = ".csv") names
names <- list.files(path = "data/spiders", pattern = ".csv") names
names <- list.files(path = "data/spiders", pattern = ".csv")
names
names <- list.files(path = "data/spiders", pattern = ".csv")
names <- list.files(path = "data/spiders", pattern = ".csv")
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
spider_list$Butte
spiders_all <- bind_rows(spider_list)
spiders_all
spider_list$Marin
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
str(table_A)
str(table_B)
table_A
str(table_A)
table_A
str(table_B)
table_B
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = c("Accession"))
summary(spiders_with_locs)
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = c("Accession"))
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = c("Accession"))
spiders_with_locs
spiders_with_locs <- full_join(spiders_all, spiders_locs, by = c("Accession"))
spiders_with_locs
class(spiders_with_locs$Date)
day <- today()
str(day)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
as.Date(spiders_with_locs$Date, format = "%d/%m/%y")
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
ymd(dateformat1)
ymd(dateformat2)
dmy(dateformat1)
ymd(dateformat1)
dmy(dateformat2)
dmy(dateformat2)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat4)
mdy_hms(dateformat5)
ymd_hms(dateformat5)
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
install.packages("devtools")
#library(devtools)
#devtools::install_github("dkahle/ggmap")
#install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
#install.packages("devtools")
#library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("albersusa")
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "dtplyr", "evaluate", "fansi", "generics", "glue", "jsonlite", "magrittr", "nlme", "pillar", "Rcpp", "readr", "rlang", "rpart", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "dtplyr", "evaluate", "fansi", "generics", "glue", "jsonlite", "magrittr", "nlme", "pillar", "Rcpp", "readr", "rlang", "rpart", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "dtplyr", "evaluate", "fansi", "generics", "glue", "jsonlite", "magrittr", "nlme", "pillar", "Rcpp", "readr", "rlang", "rpart", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "dtplyr", "evaluate", "fansi", "generics", "glue", "jsonlite", "magrittr", "nlme", "pillar", "Rcpp", "readr", "rlang", "rpart", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "dtplyr", "evaluate", "fansi", "generics", "glue", "jsonlite", "magrittr", "nlme", "pillar", "Rcpp", "readr", "rlang", "rpart", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "dtplyr", "evaluate", "fansi", "generics", "glue", "jsonlite", "magrittr", "nlme", "pillar", "Rcpp", "readr", "rlang", "rpart", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "dtplyr", "evaluate", "fansi", "generics", "glue", "jsonlite", "magrittr", "nlme", "pillar", "Rcpp", "readr", "rlang", "rpart", "tidyr", "tidyselect", "tinytex", "yaml"))
#install.packages("devtools")
#library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("albersusa")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "watercolor", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map2 <- get_map(bbox, maptype = "toner", source = "stamen")
map2 <- get_map(bbox, maptype = "toner", source = "stamen")
ggmap(map2)
map3<- get_map(bbox, maptype = "toner_backgroud", source = "stamen")
map3<- get_map(bbox, maptype = "toner-backgroud", source = "stamen")
map3<- get_map(bbox, maptype = "toner-background", source = "stamen")
map3
map3<- get_map(bbox, maptype = "toner-background", source = "stamen")
ggmap(map3)
map3<- get_map(bbox, maptype = "toner-2011", source = "stamen")
ggmap(map3)
map3<- get_map(bbox, maptype = "toner-hybrid", source = "stamen")
ggmap(map3)
map2 <- get_map(bbox, maptype = "watercolor", source = "stamen")
ggmap(map2)
library(albersusa)
install.packages("albersusa")
us_comp <- usa_sf() # get a composite map of the USA
library(albersusa)
setwd("~/Documents/GitHub/GitHub/Project/BIS15W2022_group3")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
animal_bites <- readr::read_csv("data/Health_AnimalBites.csv")%>%clean_names()
animal_bites
animal_bites <- animal_bites%>%
naniar::replace_with_na(replace=list(gender_id_desc="UNKNOWN", results_id_desc="UNKNOWN", disposition_id_desc="UNKNOWN"))
animal_bites
animal_bites%>%
count(species_id_desc)%>%
arrange(n)
animal_bites%>%
count(breed_id_desc)%>%
arrange(desc(n))
animal_bites%>%
naniar::miss_var_summary()
animal_bites%>%
separate(bite_date, into=c("year", "month", "day"), sep = "-")
animal_bites%>%
count(results_id_desc)
getwd()
knitr::opts_chunk$set(echo = TRUE)
getwd()
summary(cars)
plot(pressure)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
animal_bites <- readr::read_csv("data/Health_AnimalBites.csv")%>%clean_names()
animal_bites
animal_bites <- animal_bites%>%
naniar::replace_with_na(replace=list(gender_id_desc="UNKNOWN", results_id_desc="UNKNOWN", disposition_id_desc="UNKNOWN"))
animal_bites
animal_bites%>%
count(species_id_desc)%>%
arrange(n)
animal_bites%>%
count(breed_id_desc)%>%
arrange(desc(n))
animal_bites%>%
naniar::miss_var_summary()
animal_bites%>%
separate(bite_date, into=c("year", "month", "day"), sep = "-")
animal_bites%>%
count(results_id_desc)
